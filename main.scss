// Color Map
$colors: (
'o': transparent,
'r': red,
'u': blue,
'b': black,
'g': limegreen,
'y': yellow,
'n': orange,
'e': grey,
'w': white,
't': dodgerblue,
'd': #4d4d4d
);

// Size of pixels
$pixel-size: 8px !default

// Pixel art
$pixel-art: (
  heart: (
    (o o r r o r r o o)
    (o r r r r r r r o)
    (o r r r r r r r o)
    (o o r r r r r o o)
    (o o o r r r o o o)
    (o o o o r o o o o)
  ),
  bomb: (
    (o o o o o o o o o w w o o o o o)
    (o o o o o o o o w o o w o o w o)
    (o o o o o o t w w t o o w w o o)
    (o o o o t t d t t d t t o o o o)
    (o o o t t t t d d t t t t o o o)
    (o o d t w t t t t t w w t o o o)
    (o d t t t t t t t t t w w t o o)
    (o d t w t t t t t t t t w t o o)
    (o d t w t t t t t t t t w t o o)
    (o d t t t t t t t t t t t t o o)
    (o o d t t t t t t t t t t o o o)
    (o o d t t t t t t t t t t o o o)
    (o o o d t t t t t t t t o o o o)
    (o o o o d d t t t t d o o o o o)
    (o o o o o o d d d d o o o o o o)
  )
);

// Function to read the marix and pixelize it
@function pixelize($matrix, $size) {
  $shadow: " ";
  $rows: length($matrix);

  @for $row from 1 through $rows {
    $row-num: nth($matrix, $row);

    @for $col from 1 through length($row-num) {
      $dot: nth($row-num, $col);

      $shadow: $shadow + ($size*$col) + " " + ($size*$row) + " " + map-get($colors, $dot);

      @if not ($col == length($row-num) and $row == $rows) {
        $shadow: $shadow + ",";
      }
    }
  }
  @return unquote($shadow);
}

@mixin generate-art($matrix, $size){
  position: relative;
  width: ($size * length(nth($matrix, 1)));
  height: ($size * length($matrix));

  &::after {
    top: (-$size);
    left: (-$size);
    height: $size;
    width: $size;
    content: '';
    position: absolute;
    box-shadow: pixelize($matrix, $size);
  }
}

// main page styling
body {
  background: peachpuff;
}

.pixel-art {
  display: grid;
  grid-template-rows: 1fr 1fr 1fr;
  align-items: center;

  .art {
    @each $key, $value in $pixel-art {
      &--#{$key} {
        @include generate-art($value, $pixel-size);
      }
    }
  }
}
